<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo App with Notifications</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.3/dist/tailwind.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f0f0f0;
            color: #333;
        }
        h1, label {
            color: #14213d; /* secondary color */
        }
        button {
            background-color: #000000; /* primary color */
        }
        button:hover {
            background-color: #fca311; /* tertiary color */
        }
        footer {
            background-color: #14213d; /* secondary color */
        }
    </style>
</head>
<body class="flex flex-col min-h-screen">
    <div class="container mx-auto px-4 py-8 flex-grow">
        <h1 class="text-center text-3xl mb-6 font-bold">Retro Todo App</h1>
        <form id="todoForm" class="space-y-4">
            <div>
                <label for="taskDescription" class="block text-lg">Task Description</label>
                <input type="text" id="taskDescription" class="w-full mt-1 p-2 border rounded" required>
            </div>
            <div>
                <label for="dueDate" class="block text-lg">Due Date</label>
                <input type="date" id="dueDate" class="w-full mt-1 p-2 border rounded" required>
            </div>
            <div>
                <label for="reminderTime" class="block text-lg">Reminder Notification Time</label>
                <input type="time" id="reminderTime" class="w-full mt-1 p-2 border rounded" required>
            </div>
            <div>
                <label for="priorityLevel" class="block text-lg">Priority Level</label>
                <select id="priorityLevel" class="w-full mt-1 p-2 border rounded" required>
                    <option value="Low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="High">High</option>
                </select>
            </div>
            <button type="submit" class="w-full text-white py-2 px-4 rounded">Let's Get Things Done!</button>
        </form>
        <div id="output" class="mt-6 p-4 bg-white shadow rounded"></div>
    </div>
    <footer class="text-white py-4">
        <div class="container mx-auto text-center">
            <a href="#" class="text-white">Made with ❤️  Muniba Naeem</a>
        </div>
    </footer>
    <script>
        const form = document.getElementById('todoForm');
        const output = document.getElementById('output');
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            const taskDescription = document.getElementById('taskDescription').value;
            const dueDate = document.getElementById('dueDate').value;
            const reminderTime = document.getElementById('reminderTime').value;
            const priorityLevel = document.getElementById('priorityLevel').value;
            
            const substitutedPrompt = `generate a todo list app with notification feature to remind me to complete ${taskDescription} by ${dueDate}, with a reminder notification at ${reminderTime}, and priority level set to ${priorityLevel}. When the task is completed, mark it as completed and move it to the completed tab.`;
            
            output.innerText = ''; // Clear output section
            
            const websocket = new WebSocket('wss://backend.buildpicoapps.com/ask_ai_streaming_v2');
            websocket.addEventListener("open", () => {
                websocket.send(
                    JSON.stringify({
                        appId: "series-table",
                        prompt: substitutedPrompt,
                    })
                );
            });

            websocket.addEventListener("message", (event) => {
                console.log(event.data);
                output.innerText = `${output.innerText}${event.data}`;
            });

            websocket.addEventListener("close", (event) => {
                console.log("Connection closed", event.code, event.reason);
                if (event.code != 1000) {
                    alert("Oops, we ran into an error. Refresh the page and try again.");
                }
            });

            websocket.addEventListener("error", (error) => {
                console.log('WebSocket error', error);
                alert("Oops, we ran into an error. Refresh the page and try again.");
            });
        });
    </script>
</body>
</html>
